(()=>{"use strict";const e=class{constructor(e,t,o=""){this.title=e,this.description=t,this.dueDate=o}getTitle(){return this.title}setTitle(e){return this.title=e}getDescription(){return this.description}setDescription(e){return this.description=e}getDueDate(){if(""==this.dueDate){let e=new Date,t=e.getDate(),o=e.getMonth()+1,n=e.getFullYear();return this.dueDate=`${n}-${o}-${t}`}{let e=this.dueDate.split("-"),t=new Date(e[0],e[1],e[2]),o=t.getDate(),n=t.getMonth(),s=t.getFullYear();return this.dueDate=`${s}-${n}-${o}`}}setDate(e){return this.dueDate=e}},t=class{constructor(e){this.name=e,this.todos=[]}getName(){return this.name}setName(e){return this.name=e}getTodos(){return this.todos}getTodo(e){return this.todos.find((t=>t.title===e.title))}addTodo(e){this.todos.find((t=>t.title===e.title))||this.todos.push(e)}deleteTodo(e){return this.todos=this.todos.filter((t=>t.title!==e))}};function o(e){const t=new Date;return e.getDate()===t.getDate()&&e.getMonth()===t.getMonth()&&e.getFullYear()===t.getFullYear()}function n(e){const t=new Date;return e.getDate()<t.getDate()&&e.getMonth()===t.getMonth()&&e.getFullYear()===t.getFullYear()}function s(e,t){const o=new Date;return e.getDate()>o.getDate()&&e.getMonth()===t.getMonth()&&e.getFullYear()===t.getFullYear()&&e.getDate()<=t.getDate()&&e.getMonth()===t.getMonth()&&e.getFullYear()===t.getFullYear()}function d(e){let t=e.split("-"),o=t[2],n=t[1],s=t[0];return new Date(s,n-1,o)}function l(){let e=new Date,t=e.getDate(),o=e.getMonth(),n=e.getFullYear(),s=function(e,t){return new Date(t,e,0).getDate()}(o,n),d=t+6,l=o,a=n;return d>s&&(d=1,l+=1,13===l&&(l=1,a+=1)),new Date(a,l,d)}const a=new class{constructor(){this.projects=[],this.projects.push(new t("Today")),this.projects.push(new t("This Week")),this.projects.push(new t("This Month"))}getProjects(){return this.projects}getProject(e){return this.projects.find((t=>t.name===e))}addProject(e){this.projects.find((t=>t.name===e.name))||this.projects.push(e)}sortTodos(){let e=this.getProject("Today"),t=this.getProject("This Month"),a=this.getProject("This Week");!function(e,t,a){for(let i=0;i<e.getTodos().length;i++){let c=e.getTodos()[i],r=d(c.getDueDate()),u=l();o(r)||n(r)?(a.addTodo(c),e.deleteTodo(c.title)):s(r,u)&&(t.addTodo(c),e.deleteTodo(c.title))}}(t,a,e),function(e,t,a){for(let i=0;i<t.getTodos().length;i++){let c=t.getTodos()[i],r=d(c.getDueDate()),u=l();o(r)||n(r)?(a.addTodo(c),t.deleteTodo(c.title)):s(r,u)||(e.addTodo(c),t.deleteTodo(c.title))}}(t,a,e),function(e,t,a){for(let i=0;i<a.getTodos().length;i++){let c=a.getTodos()[i],r=d(c.getDueDate()),u=l();s(r,u)&&(t.addTodo(c),a.deleteTodo(c.title)),o(r)||s(r,u)||n(r)||(e.addTodo(c),a.deleteTodo(c.title))}}(t,a,e)}},i=a.getProject("Today"),c=a.getProject("This Week"),r=a.getProject("This Month"),u=document.querySelector(".main-board"),g=document.querySelector(".button-box"),h=document.querySelector(".todo-form"),m=document.querySelector(".fa-circle-xmark"),D=document.querySelector(".create-todo-btn");function p(){h.classList.toggle("invisible");let e=h.elements.item(0),t=h.elements.item(1),o=h.elements.item(2),n=h.elements.item(3);e.value="today",t.value="",o.value="",n.value=""}function v(){u.textContent="";let e=["#FAEDCB","#C9E4DE","#C6DEF1","#D8CDF0","#F2C6DE","#F7D9C4"];for(let t=0;t<a.getProjects().length;t++){let o=T(a.getProjects()[t]),n=Math.floor(5*Math.random())+0,s=e[n];o.childNodes[0].style.backgroundColor=s,e.splice(n,1),u.appendChild(o)}}function T(e){const t=document.createElement("div");t.classList.add("project-box");const o=document.createElement("p");o.classList.add("project-header"),o.textContent=e.name;const n=e.getTodos();if(t.appendChild(o),0!=n.length){const e=document.createElement("div");e.classList.add("todo-box"),e.classList.add("visible");for(let t=0;t<n.length;t++){let o=f(n[t],n);o.style.backgroundColor=t%2==1?"#e4e4e4":"white",e.appendChild(o)}t.appendChild(e),t.addEventListener("click",(t=>{e.classList.toggle("visible")}))}return t}function f(e,t){const o=document.createElement("div");o.classList.add("todo");const n=document.createElement("input");n.classList.add("todo-checkbox"),n.setAttribute("type","checkbox");const s=document.createElement("p");s.classList.add("todo-title"),s.textContent=e.title;const d=document.createElement("p");d.classList.add("todo-date"),d.textContent=e.getDueDate();const l=document.createElement("div");l.classList.add("check-title-date"),l.append(n,s,d);const a=document.createElement("p");return a.classList.add("todo-description"),a.textContent=e.description,n.addEventListener("change",(e=>{console.log(e.target.checked)})),o.addEventListener("dblclick",(e=>{e.target!=s&&e.target!=n&&(a.classList.add("visible"),a.contentEditable=!0,a.focus(),E(a))})),a.addEventListener("click",(()=>{a.contentEditable=!0,a.focus(),E(a)})),a.addEventListener("keypress",(o=>{"Enter"===o.key&&(e.setDescription(a.textContent),a.blur(),a.contentEditable=!1,console.log(t))})),o.addEventListener("click",(e=>{e.target!=s&&e.target!=n&&""!=a.textContent&&e.target!=a&&a.classList.toggle("visible")})),s.addEventListener("click",(()=>{s.contentEditable=!0,a.contentEditable=!1,s.focus(),E(s)})),s.addEventListener("keypress",(o=>{"Enter"===o.key&&(e.setTitle(s.textContent),s.blur(),s.contentEditable=!1,console.log(t))})),o.append(l,a),o}function E(e){let t,o;document.createRange&&(t=document.createRange(),t.selectNodeContents(e),t.collapse(!1),o=window.getSelection(),o.removeAllRanges(),o.addRange(t))}g.addEventListener("click",p),m.addEventListener("click",p),D.addEventListener("click",(t=>{t.preventDefault();let o=h.elements.item(0),n=h.elements.item(1),s=h.elements.item(2),d=h.elements.item(3);if(""===d.value){const t=new e(n.value,s.value);"today"===o.value?i.addTodo(t):"this week"===o.value?c.addTodo(t):"this month"===o.value&&r.addTodo(t)}else{const t=new e(n.value,s.value,d.value);"today"===o.value?i.addTodo(t):"this week"===o.value?c.addTodo(t):"this month"===o.value&&r.addTodo(t)}o.value="today",n.value="",s.value="",d.value="",h.classList.add("invisible"),a.sortTodos(),v()})),v()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE1BQ2pCZixFQUFVN0MsUUFBUWlILEdBQ1MsZUFBbEJ4RCxFQUFRRyxPQUNqQmQsRUFBVzlDLFFBQVFpSCxFQUV2QixDQUVBeEQsRUFBUUcsTUFBUSxRQUNoQjVGLEVBQU00RixNQUFRLEdBQ2QzRixFQUFZMkYsTUFBUSxHQUNwQjFGLEVBQVEwRixNQUFRLEdBQ2hCVCxFQUFTSSxVQUFVdUIsSUFBSSxhQUd2QnhELEVBQVNRLFlBQ1QrQixHQUFjLElBbUJoQkEsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG9saXN0Ly4vc3JjL3RvZG8uanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvcHJvamVjdC5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9Ub2Rvcy5qcyIsIndlYnBhY2s6Ly90b2RvbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBUb2RvIHtcclxuICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUgPSBcIlwiKSB7XHJcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XHJcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XHJcbiAgICB0aGlzLmR1ZURhdGUgPSBkdWVEYXRlO1xyXG4gIH1cclxuXHJcbiAgZ2V0VGl0bGUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy50aXRsZTtcclxuICB9XHJcblxyXG4gIHNldFRpdGxlKG5ld1RpdGxlKSB7XHJcbiAgICByZXR1cm4gKHRoaXMudGl0bGUgPSBuZXdUaXRsZSk7XHJcbiAgfVxyXG5cclxuICBnZXREZXNjcmlwdGlvbigpIHtcclxuICAgIHJldHVybiB0aGlzLmRlc2NyaXB0aW9uO1xyXG4gIH1cclxuXHJcbiAgc2V0RGVzY3JpcHRpb24obmV3RGVzY3JpcHRpb24pIHtcclxuICAgIHJldHVybiAodGhpcy5kZXNjcmlwdGlvbiA9IG5ld0Rlc2NyaXB0aW9uKTtcclxuICB9XHJcblxyXG4gIGdldER1ZURhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5kdWVEYXRlID09IFwiXCIpIHtcclxuICAgICAgbGV0IG5ld0RhdGUgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICBsZXQgZGF5ID0gbmV3RGF0ZS5nZXREYXRlKCk7XHJcbiAgICAgIGxldCBtb250aCA9IG5ld0RhdGUuZ2V0TW9udGgoKSArIDE7XHJcbiAgICAgIGxldCB5ZWFyID0gbmV3RGF0ZS5nZXRGdWxsWWVhcigpO1xyXG5cclxuICAgICAgcmV0dXJuICh0aGlzLmR1ZURhdGUgPSBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX1gKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxldCBkYXRlQXJyYXkgPSB0aGlzLmR1ZURhdGUuc3BsaXQoXCItXCIpO1xyXG4gICAgICBsZXQgbmV3RGF0ZSA9IG5ldyBEYXRlKGRhdGVBcnJheVswXSwgZGF0ZUFycmF5WzFdLCBkYXRlQXJyYXlbMl0pO1xyXG4gICAgICBsZXQgZGF5ID0gbmV3RGF0ZS5nZXREYXRlKCk7XHJcbiAgICAgIGxldCBtb250aCA9IG5ld0RhdGUuZ2V0TW9udGgoKSA7XHJcbiAgICAgIGxldCB5ZWFyID0gbmV3RGF0ZS5nZXRGdWxsWWVhcigpO1xyXG5cclxuICAgICAgcmV0dXJuICh0aGlzLmR1ZURhdGUgPSBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX1gKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldERhdGUobmV3RGF0ZSkge1xyXG4gICAgcmV0dXJuICh0aGlzLmR1ZURhdGUgPSBuZXdEYXRlKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRvZG87XHJcbiIsImNsYXNzIFByb2plY3Qge1xyXG4gIGNvbnN0cnVjdG9yKG5hbWUpIHtcclxuICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICB0aGlzLnRvZG9zID0gW107XHJcbiAgfVxyXG5cclxuICBnZXROYW1lKCkge1xyXG4gICAgcmV0dXJuIHRoaXMubmFtZTtcclxuICB9XHJcblxyXG4gIHNldE5hbWUobmV3TmFtZSkge1xyXG4gICAgcmV0dXJuICh0aGlzLm5hbWUgPSBuZXdOYW1lKTtcclxuICB9XHJcblxyXG4gIGdldFRvZG9zKCkge1xyXG4gICAgcmV0dXJuIHRoaXMudG9kb3M7XHJcbiAgfVxyXG5cclxuICBnZXRUb2RvKGNob3NlblRvZG9PYmplY3QpIHtcclxuICAgIHJldHVybiB0aGlzLnRvZG9zLmZpbmQoKHRvZG8pID0+IHRvZG8udGl0bGUgPT09IGNob3NlblRvZG9PYmplY3QudGl0bGUpO1xyXG4gIH1cclxuXHJcbiAgYWRkVG9kbyh0b2RvT2JqZWN0KSB7XHJcbiAgICBpZiAodGhpcy50b2Rvcy5maW5kKCh0b2RvKSA9PiB0b2RvLnRpdGxlID09PSB0b2RvT2JqZWN0LnRpdGxlKSkgcmV0dXJuO1xyXG4gICAgdGhpcy50b2Rvcy5wdXNoKHRvZG9PYmplY3QpO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlVG9kbyh0b2RvVGl0bGVUb0JlRGVsZXRlZCkge1xyXG4gICAgcmV0dXJuICh0aGlzLnRvZG9zID0gdGhpcy50b2Rvcy5maWx0ZXIoXHJcbiAgICAgICh0b2RvKSA9PiB0b2RvLnRpdGxlICE9PSB0b2RvVGl0bGVUb0JlRGVsZXRlZFxyXG4gICAgKSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9qZWN0O1xyXG4iLCJpbXBvcnQgUHJvamVjdCBmcm9tIFwiLi9wcm9qZWN0XCI7XHJcblxyXG5jbGFzcyBUb2RvcyB7XHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnByb2plY3RzID0gW107XHJcbiAgICB0aGlzLnByb2plY3RzLnB1c2gobmV3IFByb2plY3QoXCJUb2RheVwiKSk7XHJcbiAgICB0aGlzLnByb2plY3RzLnB1c2gobmV3IFByb2plY3QoXCJUaGlzIFdlZWtcIikpO1xyXG4gICAgdGhpcy5wcm9qZWN0cy5wdXNoKG5ldyBQcm9qZWN0KFwiVGhpcyBNb250aFwiKSk7XHJcbiAgfVxyXG5cclxuICBnZXRQcm9qZWN0cygpIHtcclxuICAgIHJldHVybiB0aGlzLnByb2plY3RzO1xyXG4gIH1cclxuXHJcbiAgZ2V0UHJvamVjdChwcm9qZWN0TmFtZSkge1xyXG4gICAgcmV0dXJuIHRoaXMucHJvamVjdHMuZmluZCgocHJvaikgPT4gcHJvai5uYW1lID09PSBwcm9qZWN0TmFtZSk7XHJcbiAgfVxyXG5cclxuICBhZGRQcm9qZWN0KG5ld1Byb2plY3RPYmplY3QpIHtcclxuICAgIGlmICh0aGlzLnByb2plY3RzLmZpbmQoKHByb2opID0+IHByb2oubmFtZSA9PT0gbmV3UHJvamVjdE9iamVjdC5uYW1lKSlcclxuICAgICAgcmV0dXJuO1xyXG4gICAgdGhpcy5wcm9qZWN0cy5wdXNoKG5ld1Byb2plY3RPYmplY3QpO1xyXG4gIH1cclxuXHJcbiAgc29ydFRvZG9zKCkge1xyXG4gICAgbGV0IHRvZGF5UHJvamVjdCA9IHRoaXMuZ2V0UHJvamVjdChcIlRvZGF5XCIpO1xyXG4gICAgbGV0IG1vbnRoUHJvamVjdCA9IHRoaXMuZ2V0UHJvamVjdChcIlRoaXMgTW9udGhcIik7XHJcbiAgICBsZXQgd2Vla1Byb2plY3QgPSB0aGlzLmdldFByb2plY3QoXCJUaGlzIFdlZWtcIik7XHJcblxyXG4gICAgLy8gRWFjaCBmdW5jdGlvbiBzb3J0cyBhIHBhcnRpY3VsYXIgUHJvamVjdCBhbmQgbW92ZXMgYW5kIGRlbGV0ZXMgYSBUb2RvIGFjY29yZGluZyB0byBkdWUgZGF0ZVxyXG4gICAgc29ydE1vbnRoUHJvamVjdChtb250aFByb2plY3QsIHdlZWtQcm9qZWN0LCB0b2RheVByb2plY3QpO1xyXG4gICAgc29ydFdlZWtQcm9qZWN0KG1vbnRoUHJvamVjdCwgd2Vla1Byb2plY3QsIHRvZGF5UHJvamVjdCk7XHJcbiAgICBzb3J0VG9kYXlQcm9qZWN0KG1vbnRoUHJvamVjdCwgd2Vla1Byb2plY3QsIHRvZGF5UHJvamVjdCk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBTT1JUIEZVTkNUSU9OU1xyXG5cclxuZnVuY3Rpb24gc29ydE1vbnRoUHJvamVjdChtb250aFByb2osIHdlZWtQcm9qLCB0b2RheVByb2opIHtcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IG1vbnRoUHJvai5nZXRUb2RvcygpLmxlbmd0aDsgaSsrKSB7XHJcbiAgICBsZXQgdG9kbyA9IG1vbnRoUHJvai5nZXRUb2RvcygpW2ldO1xyXG4gICAgbGV0IHRvZG9EdWVEYXRlID0gdG9kby5nZXREdWVEYXRlKCk7XHJcblxyXG4gICAgbGV0IHJlZm9ybWF0dGVkRHVlRGF0ZSA9IHJlZm9ybWF0RHVlRGF0ZSh0b2RvRHVlRGF0ZSk7XHJcblxyXG4gICAgbGV0IGZ1bGxFbmRPZldlZWtEYXRlID0gZ2V0RW5kT2ZXZWVrRGF0ZSgpO1xyXG5cclxuICAgIGlmIChpc1RvZGF5KHJlZm9ybWF0dGVkRHVlRGF0ZSkgfHwgYmVmb3JlVG9kYXkocmVmb3JtYXR0ZWREdWVEYXRlKSkge1xyXG4gICAgICB0b2RheVByb2ouYWRkVG9kbyh0b2RvKTtcclxuICAgICAgbW9udGhQcm9qLmRlbGV0ZVRvZG8odG9kby50aXRsZSk7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXNXZWVrKHJlZm9ybWF0dGVkRHVlRGF0ZSwgZnVsbEVuZE9mV2Vla0RhdGUpKSB7XHJcbiAgICAgIHdlZWtQcm9qLmFkZFRvZG8odG9kbyk7XHJcbiAgICAgIG1vbnRoUHJvai5kZWxldGVUb2RvKHRvZG8udGl0bGUpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gc29ydFdlZWtQcm9qZWN0KG1vbnRoUHJvaiwgd2Vla1Byb2osIHRvZGF5UHJvaikge1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgd2Vla1Byb2ouZ2V0VG9kb3MoKS5sZW5ndGg7IGkrKykge1xyXG4gICAgbGV0IHRvZG8gPSB3ZWVrUHJvai5nZXRUb2RvcygpW2ldO1xyXG4gICAgbGV0IHRvZG9EdWVEYXRlID0gdG9kby5nZXREdWVEYXRlKCk7XHJcbiAgICBsZXQgcmVmb3JtYXR0ZWREdWVEYXRlID0gcmVmb3JtYXREdWVEYXRlKHRvZG9EdWVEYXRlKTtcclxuICAgIGxldCBmdWxsRW5kT2ZXZWVrRGF0ZSA9IGdldEVuZE9mV2Vla0RhdGUoKTtcclxuXHJcbiAgICBpZiAoaXNUb2RheShyZWZvcm1hdHRlZER1ZURhdGUpIHx8IGJlZm9yZVRvZGF5KHJlZm9ybWF0dGVkRHVlRGF0ZSkpIHtcclxuICAgICAgdG9kYXlQcm9qLmFkZFRvZG8odG9kbyk7XHJcbiAgICAgIHdlZWtQcm9qLmRlbGV0ZVRvZG8odG9kby50aXRsZSk7XHJcbiAgICB9IGVsc2UgaWYgKCF0aGlzV2VlayhyZWZvcm1hdHRlZER1ZURhdGUsIGZ1bGxFbmRPZldlZWtEYXRlKSkge1xyXG4gICAgICBtb250aFByb2ouYWRkVG9kbyh0b2RvKTtcclxuICAgICAgd2Vla1Byb2ouZGVsZXRlVG9kbyh0b2RvLnRpdGxlKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNvcnRUb2RheVByb2plY3QobW9udGhQcm9qLCB3ZWVrUHJvaiwgdG9kYXlQcm9qKSB7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB0b2RheVByb2ouZ2V0VG9kb3MoKS5sZW5ndGg7IGkrKykge1xyXG4gICAgbGV0IHRvZG8gPSB0b2RheVByb2ouZ2V0VG9kb3MoKVtpXTtcclxuICAgIGxldCB0b2RvRHVlRGF0ZSA9IHRvZG8uZ2V0RHVlRGF0ZSgpO1xyXG4gICAgbGV0IHJlZm9ybWF0dGVkRHVlRGF0ZSA9IHJlZm9ybWF0RHVlRGF0ZSh0b2RvRHVlRGF0ZSk7XHJcbiAgICBsZXQgZnVsbEVuZE9mV2Vla0RhdGUgPSBnZXRFbmRPZldlZWtEYXRlKCk7XHJcblxyXG4gICAgaWYgKHRoaXNXZWVrKHJlZm9ybWF0dGVkRHVlRGF0ZSwgZnVsbEVuZE9mV2Vla0RhdGUpKSB7XHJcbiAgICAgIHdlZWtQcm9qLmFkZFRvZG8odG9kbyk7XHJcbiAgICAgIHRvZGF5UHJvai5kZWxldGVUb2RvKHRvZG8udGl0bGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChcclxuICAgICAgIWlzVG9kYXkocmVmb3JtYXR0ZWREdWVEYXRlKSAmJlxyXG4gICAgICAhdGhpc1dlZWsocmVmb3JtYXR0ZWREdWVEYXRlLCBmdWxsRW5kT2ZXZWVrRGF0ZSkgJiZcclxuICAgICAgIWJlZm9yZVRvZGF5KHJlZm9ybWF0dGVkRHVlRGF0ZSlcclxuICAgICkge1xyXG4gICAgICBtb250aFByb2ouYWRkVG9kbyh0b2RvKTtcclxuICAgICAgdG9kYXlQcm9qLmRlbGV0ZVRvZG8odG9kby50aXRsZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBEQVRFIENPTVBBUklTT04gQ0hFQ0tJTkcgRlVOQ1RJT05TXHJcblxyXG5mdW5jdGlvbiBpc1RvZGF5KGR1ZURhdGUpIHtcclxuICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XHJcblxyXG4gIGNvbnN0IGlzU2FtZURhdGUgPVxyXG4gICAgZHVlRGF0ZS5nZXREYXRlKCkgPT09IHRvZGF5LmdldERhdGUoKSAmJlxyXG4gICAgZHVlRGF0ZS5nZXRNb250aCgpID09PSB0b2RheS5nZXRNb250aCgpICYmXHJcbiAgICBkdWVEYXRlLmdldEZ1bGxZZWFyKCkgPT09IHRvZGF5LmdldEZ1bGxZZWFyKCk7XHJcbiAgcmV0dXJuIGlzU2FtZURhdGU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGJlZm9yZVRvZGF5KGR1ZURhdGUpIHtcclxuICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XHJcbiAgY29uc3QgaXNiZWZvcmVUb2RheSA9XHJcbiAgICBkdWVEYXRlLmdldERhdGUoKSA8IHRvZGF5LmdldERhdGUoKSAmJlxyXG4gICAgZHVlRGF0ZS5nZXRNb250aCgpID09PSB0b2RheS5nZXRNb250aCgpICYmXHJcbiAgICBkdWVEYXRlLmdldEZ1bGxZZWFyKCkgPT09IHRvZGF5LmdldEZ1bGxZZWFyKCk7XHJcblxyXG4gIHJldHVybiBpc2JlZm9yZVRvZGF5O1xyXG59XHJcblxyXG5mdW5jdGlvbiB0aGlzV2VlayhkdWVEYXRlLCB3ZWVrRGF0ZSkge1xyXG4gIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcclxuICBjb25zdCBpc1dpdGhpbldlZWtFbmQgPVxyXG4gICAgZHVlRGF0ZS5nZXREYXRlKCkgPiB0b2RheS5nZXREYXRlKCkgJiZcclxuICAgIGR1ZURhdGUuZ2V0TW9udGgoKSA9PT0gd2Vla0RhdGUuZ2V0TW9udGgoKSAmJlxyXG4gICAgZHVlRGF0ZS5nZXRGdWxsWWVhcigpID09PSB3ZWVrRGF0ZS5nZXRGdWxsWWVhcigpICYmXHJcbiAgICBkdWVEYXRlLmdldERhdGUoKSA8PSB3ZWVrRGF0ZS5nZXREYXRlKCkgJiZcclxuICAgIGR1ZURhdGUuZ2V0TW9udGgoKSA9PT0gd2Vla0RhdGUuZ2V0TW9udGgoKSAmJlxyXG4gICAgZHVlRGF0ZS5nZXRGdWxsWWVhcigpID09PSB3ZWVrRGF0ZS5nZXRGdWxsWWVhcigpO1xyXG5cclxuICByZXR1cm4gaXNXaXRoaW5XZWVrRW5kO1xyXG59XHJcblxyXG4vLyBVVElMIEZVTkNUSU9OU1xyXG5cclxuZnVuY3Rpb24gcmVmb3JtYXREdWVEYXRlKGR1ZURhdGUpIHtcclxuICBsZXQgZHVlRGF0ZUFycmF5ID0gZHVlRGF0ZS5zcGxpdChcIi1cIik7XHJcbiAgbGV0IHRvZG9EYXkgPSBkdWVEYXRlQXJyYXlbMl07XHJcbiAgbGV0IHRvZG9Nb250aCA9IGR1ZURhdGVBcnJheVsxXTtcclxuICBsZXQgdG9kb1llYXIgPSBkdWVEYXRlQXJyYXlbMF07XHJcbiAgcmV0dXJuIG5ldyBEYXRlKHRvZG9ZZWFyLCB0b2RvTW9udGggLSAxLCB0b2RvRGF5KTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0RW5kT2ZXZWVrRGF0ZSgpIHtcclxuICBsZXQgdG9kYXkgPSBuZXcgRGF0ZSgpO1xyXG4gIGxldCBkYXkgPSB0b2RheS5nZXREYXRlKCk7XHJcbiAgbGV0IG1vbnRoID0gdG9kYXkuZ2V0TW9udGgoKTtcclxuICBsZXQgeWVhciA9IHRvZGF5LmdldEZ1bGxZZWFyKCk7XHJcblxyXG4gIGxldCBudW1iZXJPZkRheXNJbk1vbnRoID0gZGF5c0luTW9udGgobW9udGgsIHllYXIpO1xyXG4gIGxldCBlbmRPZldlZWtEYXkgPSBkYXkgKyA2O1xyXG4gIGxldCBlbmRPZk1vbnRoID0gbW9udGg7XHJcbiAgbGV0IGVuZE9mWWVhciA9IHllYXI7XHJcblxyXG4gIGlmIChlbmRPZldlZWtEYXkgPiBudW1iZXJPZkRheXNJbk1vbnRoKSB7XHJcbiAgICBlbmRPZldlZWtEYXkgPSAxO1xyXG4gICAgZW5kT2ZNb250aCArPSAxO1xyXG5cclxuICAgIC8vIHJlc2V0IG1vbnRoIHRvIEphbnVhcnkgYW5kIGFkZCAxIHRvIHllYXJcclxuICAgIGlmIChlbmRPZk1vbnRoID09PSAxMykge1xyXG4gICAgICBlbmRPZk1vbnRoID0gMTtcclxuICAgICAgZW5kT2ZZZWFyICs9IDE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gbmV3IERhdGUoZW5kT2ZZZWFyLCBlbmRPZk1vbnRoLCBlbmRPZldlZWtEYXkpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkYXlzSW5Nb250aChtb250aCwgeWVhcikge1xyXG4gIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgMCkuZ2V0RGF0ZSgpO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUb2RvcztcclxuIiwiaW1wb3J0IFRvZG8gZnJvbSBcIi4vdG9kb1wiO1xyXG5pbXBvcnQgUHJvamVjdCBmcm9tIFwiLi9wcm9qZWN0XCI7XHJcbmltcG9ydCBUb2RvcyBmcm9tIFwiLi9Ub2Rvc1wiO1xyXG5cclxuLy8gVEVTVFxyXG4vKmxldCB0ZXN0VG9kbyA9IG5ldyBUb2RvKFwiVG9kbyAxXCIsIFwibmV3IHRlc3QgZm9yIHRvZG8gYm94IDFcIik7XHJcbmxldCB0ZXN0VG9kbzIgPSBuZXcgVG9kbyhcIlRvZG8gMlwiLCBcIm5ldyB0ZXN0IGZvciB0b2RvIGJveCAyXCIpO1xyXG5sZXQgdGVzdFRvZG8zID0gbmV3IFRvZG8oXCJUb2RvIDNcIiwgXCJuZXcgdGVzdCBmb3IgdG9kbyBib3ggM1wiKTsgXHJcbmxldCBkYXRlU29ydFRlc3QgPSBuZXcgVG9kbyhcIlRvZG8gNVwiLCBcIm5ldyB0ZXN0IGZvciBkYXRlIHNvcnRpbmdcIiwgXCIxNS0xLTIwMjVcIik7XHJcbmxldCBtb250aFRlc3QgPSBuZXcgVG9kbyhcIk1vbnRoIHRlc3RcIiwgXCJ0ZXN0aW5nIG1vbnRoIHNvcnRcIiwgXCIyNi0xLTIwMjVcIik7XHJcblxyXG5cclxuXHJcbnRvZGF5VG9kb3MuYWRkVG9kbyh0ZXN0VG9kbyk7XHJcbnRvZGF5VG9kb3MuYWRkVG9kbyh0ZXN0VG9kbzIpO1xyXG50b2RheVRvZG9zLmFkZFRvZG8odGVzdFRvZG8zKTtcclxudG9kYXlUb2Rvcy5hZGRUb2RvKGRhdGVTb3J0VGVzdCk7XHJcblxyXG5tb250aFRvZG9zLmFkZFRvZG8obW9udGhUZXN0KTtcclxuKi9cclxuXHJcbmNvbnN0IGFsbFRvZG9zID0gbmV3IFRvZG9zKCk7XHJcblxyXG5jb25zdCB0b2RheVRvZG9zID0gYWxsVG9kb3MuZ2V0UHJvamVjdChcIlRvZGF5XCIpO1xyXG5jb25zdCB3ZWVrVG9kb3MgPSBhbGxUb2Rvcy5nZXRQcm9qZWN0KFwiVGhpcyBXZWVrXCIpO1xyXG5jb25zdCBtb250aFRvZG9zID0gYWxsVG9kb3MuZ2V0UHJvamVjdChcIlRoaXMgTW9udGhcIik7XHJcblxyXG4vL2FsbFRvZG9zLnNvcnRUb2RvcygpO1xyXG5cclxuLy8gRE9NIEVMRU1FTlRTXHJcblxyXG5jb25zdCBtYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluLWJvYXJkXCIpO1xyXG5cclxuY29uc3QgYWRkQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5idXR0b24tYm94XCIpO1xyXG5jb25zdCB0b2RvRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9kby1mb3JtXCIpO1xyXG5jb25zdCBjbG9zZVRvZG9Gb3JtQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mYS1jaXJjbGUteG1hcmtcIik7XHJcbmNvbnN0IHRvZG9TdWJtaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNyZWF0ZS10b2RvLWJ0blwiKTtcclxuXHJcbi8vIExpc3RlbmVyc1xyXG5cclxuYWRkQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbG9zZUZvcm1BbmRSZXNldCk7XHJcblxyXG5jbG9zZVRvZG9Gb3JtQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbG9zZUZvcm1BbmRSZXNldCk7XHJcblxyXG50b2RvU3VibWl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxuICBsZXQgcHJvamVjdCA9IHRvZG9Gb3JtLmVsZW1lbnRzLml0ZW0oMCk7XHJcbiAgbGV0IHRpdGxlID0gdG9kb0Zvcm0uZWxlbWVudHMuaXRlbSgxKTtcclxuICBsZXQgZGVzY3JpcHRpb24gPSB0b2RvRm9ybS5lbGVtZW50cy5pdGVtKDIpO1xyXG4gIGxldCBkdWVEYXRlID0gdG9kb0Zvcm0uZWxlbWVudHMuaXRlbSgzKTtcclxuXHJcbiAgaWYgKGR1ZURhdGUudmFsdWUgPT09IFwiXCIpIHtcclxuICAgIGNvbnN0IG5ld1RvZG8gPSBuZXcgVG9kbyh0aXRsZS52YWx1ZSwgZGVzY3JpcHRpb24udmFsdWUpO1xyXG4gICAgaWYgKHByb2plY3QudmFsdWUgPT09IFwidG9kYXlcIikge1xyXG4gICAgICB0b2RheVRvZG9zLmFkZFRvZG8obmV3VG9kbyk7XHJcbiAgICB9IGVsc2UgaWYgKHByb2plY3QudmFsdWUgPT09IFwidGhpcyB3ZWVrXCIpIHtcclxuICAgICAgd2Vla1RvZG9zLmFkZFRvZG8obmV3VG9kbyk7XHJcbiAgICB9IGVsc2UgaWYgKHByb2plY3QudmFsdWUgPT09IFwidGhpcyBtb250aFwiKSB7XHJcbiAgICAgIG1vbnRoVG9kb3MuYWRkVG9kbyhuZXdUb2RvKTtcclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgY29uc3QgbmV3VG9kbyA9IG5ldyBUb2RvKHRpdGxlLnZhbHVlLCBkZXNjcmlwdGlvbi52YWx1ZSwgZHVlRGF0ZS52YWx1ZSk7XHJcbiAgICBpZiAocHJvamVjdC52YWx1ZSA9PT0gXCJ0b2RheVwiKSB7XHJcbiAgICAgIHRvZGF5VG9kb3MuYWRkVG9kbyhuZXdUb2RvKTtcclxuICAgIH0gZWxzZSBpZiAocHJvamVjdC52YWx1ZSA9PT0gXCJ0aGlzIHdlZWtcIikge1xyXG4gICAgICB3ZWVrVG9kb3MuYWRkVG9kbyhuZXdUb2RvKTtcclxuICAgIH0gZWxzZSBpZiAocHJvamVjdC52YWx1ZSA9PT0gXCJ0aGlzIG1vbnRoXCIpIHtcclxuICAgICAgbW9udGhUb2Rvcy5hZGRUb2RvKG5ld1RvZG8pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJvamVjdC52YWx1ZSA9IFwidG9kYXlcIjtcclxuICB0aXRsZS52YWx1ZSA9IFwiXCI7XHJcbiAgZGVzY3JpcHRpb24udmFsdWUgPSBcIlwiO1xyXG4gIGR1ZURhdGUudmFsdWUgPSBcIlwiO1xyXG4gIHRvZG9Gb3JtLmNsYXNzTGlzdC5hZGQoXCJpbnZpc2libGVcIik7XHJcblxyXG4gIC8vIFNvcnRpbmcgdG9kb3Mgb25seSBoYXBwZW5zIGluIGRlZmF1bHQgUHJvamVjdHMoXCJUb2RheVwiLCBcIlRoaXMgV2Vla1wiLCBcIlRoaXMgTW9udGhcIilcclxuICBhbGxUb2Rvcy5zb3J0VG9kb3MoKTtcclxuICBzaG93UHJvamVjdHMoKTtcclxufSk7XHJcblxyXG4vLyBMaXN0ZW5lciBGdW5jdGlvbnNcclxuXHJcbmZ1bmN0aW9uIGNsb3NlRm9ybUFuZFJlc2V0KCkge1xyXG4gIHRvZG9Gb3JtLmNsYXNzTGlzdC50b2dnbGUoXCJpbnZpc2libGVcIik7XHJcbiAgbGV0IHByb2plY3QgPSB0b2RvRm9ybS5lbGVtZW50cy5pdGVtKDApO1xyXG4gIGxldCB0aXRsZSA9IHRvZG9Gb3JtLmVsZW1lbnRzLml0ZW0oMSk7XHJcbiAgbGV0IGRlc2NyaXB0aW9uID0gdG9kb0Zvcm0uZWxlbWVudHMuaXRlbSgyKTtcclxuICBsZXQgZHVlRGF0ZSA9IHRvZG9Gb3JtLmVsZW1lbnRzLml0ZW0oMyk7XHJcblxyXG4gIHByb2plY3QudmFsdWUgPSBcInRvZGF5XCI7XHJcbiAgdGl0bGUudmFsdWUgPSBcIlwiO1xyXG4gIGRlc2NyaXB0aW9uLnZhbHVlID0gXCJcIjtcclxuICBkdWVEYXRlLnZhbHVlID0gXCJcIjtcclxufVxyXG5cclxuLy8gRE9NIExvYWRlcnNcclxuc2hvd1Byb2plY3RzKCk7XHJcblxyXG5mdW5jdGlvbiBzaG93UHJvamVjdHMoKSB7XHJcbiAgbWFpbi50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgLy8gdG8gZW5zdXJlIG5vIGNvbG9yIHJlcGVhdHNcclxuICBsZXQgY29sb3JBcnJheSA9IFtcclxuICAgIFwiI0ZBRURDQlwiLFxyXG4gICAgXCIjQzlFNERFXCIsXHJcbiAgICBcIiNDNkRFRjFcIixcclxuICAgIFwiI0Q4Q0RGMFwiLFxyXG4gICAgXCIjRjJDNkRFXCIsXHJcbiAgICBcIiNGN0Q5QzRcIixcclxuICBdO1xyXG5cclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbFRvZG9zLmdldFByb2plY3RzKCkubGVuZ3RoOyBpKyspIHtcclxuICAgIGxldCBwcm9qZWN0ID0gYWxsVG9kb3MuZ2V0UHJvamVjdHMoKVtpXTtcclxuXHJcbiAgICBsZXQgcHJvamVjdEJveCA9IGNyZWF0ZVByb2plY3RCb3gocHJvamVjdCk7XHJcblxyXG4gICAgLy8gQ29sb3IgZWFjaCBwcm9qZWN0IGhlYWRlciBkaWZmZXJlbnRseVxyXG5cclxuICAgIGxldCBiZ0NvbG9ySW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoNSAtIDApKSArIDA7XHJcbiAgICBsZXQgYmdDb2xvciA9IGNvbG9yQXJyYXlbYmdDb2xvckluZGV4XTtcclxuICAgIGxldCBwcm9qZWN0SGVhZGVyID0gcHJvamVjdEJveC5jaGlsZE5vZGVzWzBdO1xyXG5cclxuICAgIHByb2plY3RIZWFkZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmdDb2xvcjtcclxuXHJcbiAgICAvLyBSZW1vdmUgY29sb3IgZnJvbSBhcnJheSBzbyBpdCBjYW4ndCBiZSBwaWNrZWQgYWdhaW5cclxuICAgIGNvbG9yQXJyYXkuc3BsaWNlKGJnQ29sb3JJbmRleCwgMSk7XHJcblxyXG4gICAgbWFpbi5hcHBlbmRDaGlsZChwcm9qZWN0Qm94KTtcclxuICB9XHJcbn1cclxuXHJcbi8vIERPTSBDcmVhdGlvbiBGdW5jdGlvbnNcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZVByb2plY3RCb3gocHJvamVjdE9iamVjdCkge1xyXG4gIGNvbnN0IHByb2plY3RCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIHByb2plY3RCb3guY2xhc3NMaXN0LmFkZChcInByb2plY3QtYm94XCIpO1xyXG5cclxuICBjb25zdCBwcm9qZWN0SGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgcHJvamVjdEhlYWRlci5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1oZWFkZXJcIik7XHJcbiAgcHJvamVjdEhlYWRlci50ZXh0Q29udGVudCA9IHByb2plY3RPYmplY3QubmFtZTtcclxuXHJcbiAgY29uc3QgcHJvamVjdFRvZG9zID0gcHJvamVjdE9iamVjdC5nZXRUb2RvcygpO1xyXG5cclxuICBwcm9qZWN0Qm94LmFwcGVuZENoaWxkKHByb2plY3RIZWFkZXIpO1xyXG5cclxuICBpZiAocHJvamVjdFRvZG9zLmxlbmd0aCAhPSAwKSB7XHJcbiAgICBjb25zdCB0b2RvQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuICAgIHRvZG9Cb3guY2xhc3NMaXN0LmFkZChcInRvZG8tYm94XCIpO1xyXG4gICAgdG9kb0JveC5jbGFzc0xpc3QuYWRkKFwidmlzaWJsZVwiKTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb2plY3RUb2Rvcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICBsZXQgdG9kbyA9IHByb2plY3RUb2Rvc1tpXTtcclxuICAgICAgbGV0IHRvZG9FbCA9IGNyZWF0ZVRvZG9Cb3godG9kbywgcHJvamVjdFRvZG9zKTtcclxuXHJcbiAgICAgIGlmIChpICUgMiA9PSAxKSB7XHJcbiAgICAgICAgdG9kb0VsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiI2U0ZTRlNFwiO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRvZG9FbC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcIndoaXRlXCI7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRvZG9Cb3guYXBwZW5kQ2hpbGQodG9kb0VsKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm9qZWN0Qm94LmFwcGVuZENoaWxkKHRvZG9Cb3gpO1xyXG5cclxuICAgIC8vIExpc3RlbmVyc1xyXG5cclxuICAgIHByb2plY3RCb3guYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICAgIHRvZG9Cb3guY2xhc3NMaXN0LnRvZ2dsZShcInZpc2libGVcIik7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHJldHVybiBwcm9qZWN0Qm94O1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVUb2RvQm94KHRvZG9PYmplY3QsIHByb2plY3RUb2Rvcykge1xyXG4gIGNvbnN0IHRvZG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gIHRvZG8uY2xhc3NMaXN0LmFkZChcInRvZG9cIik7XHJcblxyXG4gIGNvbnN0IGNoZWNrQm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xyXG4gIGNoZWNrQm94LmNsYXNzTGlzdC5hZGQoXCJ0b2RvLWNoZWNrYm94XCIpO1xyXG4gIGNoZWNrQm94LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJjaGVja2JveFwiKTtcclxuXHJcbiAgY29uc3QgdG9kb1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgdG9kb1RpdGxlLmNsYXNzTGlzdC5hZGQoXCJ0b2RvLXRpdGxlXCIpO1xyXG4gIHRvZG9UaXRsZS50ZXh0Q29udGVudCA9IHRvZG9PYmplY3QudGl0bGU7XHJcblxyXG4gIGNvbnN0IHRvZG9EYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XHJcbiAgdG9kb0RhdGUuY2xhc3NMaXN0LmFkZChcInRvZG8tZGF0ZVwiKTtcclxuICB0b2RvRGF0ZS50ZXh0Q29udGVudCA9IHRvZG9PYmplY3QuZ2V0RHVlRGF0ZSgpO1xyXG5cclxuICBjb25zdCBjaGVja1RpdGxlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgY2hlY2tUaXRsZURhdGUuY2xhc3NMaXN0LmFkZChcImNoZWNrLXRpdGxlLWRhdGVcIik7XHJcblxyXG4gIGNoZWNrVGl0bGVEYXRlLmFwcGVuZChjaGVja0JveCwgdG9kb1RpdGxlLCB0b2RvRGF0ZSk7XHJcblxyXG4gIGNvbnN0IHRvZG9EZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG4gIHRvZG9EZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKFwidG9kby1kZXNjcmlwdGlvblwiKTtcclxuICB0b2RvRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSB0b2RvT2JqZWN0LmRlc2NyaXB0aW9uO1xyXG5cclxuICAvLyBMaXN0ZW5lcnNcclxuXHJcbiAgY2hlY2tCb3guYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoZSkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZS50YXJnZXQuY2hlY2tlZCk7XHJcbiAgfSk7XHJcblxyXG4gIHRvZG8uYWRkRXZlbnRMaXN0ZW5lcihcImRibGNsaWNrXCIsIChlKSA9PiB7XHJcbiAgICBpZiAoZS50YXJnZXQgIT0gdG9kb1RpdGxlICYmIGUudGFyZ2V0ICE9IGNoZWNrQm94KSB7XHJcbiAgICAgIHRvZG9EZXNjcmlwdGlvbi5jbGFzc0xpc3QuYWRkKFwidmlzaWJsZVwiKTtcclxuICAgICAgdG9kb0Rlc2NyaXB0aW9uLmNvbnRlbnRFZGl0YWJsZSA9IHRydWU7XHJcbiAgICAgIHRvZG9EZXNjcmlwdGlvbi5mb2N1cygpO1xyXG4gICAgICBzZXRUb0VuZE9mRWRpdGFibGUodG9kb0Rlc2NyaXB0aW9uKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgdG9kb0Rlc2NyaXB0aW9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICB0b2RvRGVzY3JpcHRpb24uY29udGVudEVkaXRhYmxlID0gdHJ1ZTtcclxuICAgIHRvZG9EZXNjcmlwdGlvbi5mb2N1cygpO1xyXG4gICAgc2V0VG9FbmRPZkVkaXRhYmxlKHRvZG9EZXNjcmlwdGlvbik7XHJcbiAgfSk7XHJcblxyXG4gIHRvZG9EZXNjcmlwdGlvbi5hZGRFdmVudExpc3RlbmVyKFwia2V5cHJlc3NcIiwgKGUpID0+IHtcclxuICAgIGlmIChlLmtleSA9PT0gXCJFbnRlclwiKSB7XHJcbiAgICAgIHRvZG9PYmplY3Quc2V0RGVzY3JpcHRpb24odG9kb0Rlc2NyaXB0aW9uLnRleHRDb250ZW50KTtcclxuICAgICAgdG9kb0Rlc2NyaXB0aW9uLmJsdXIoKTtcclxuICAgICAgdG9kb0Rlc2NyaXB0aW9uLmNvbnRlbnRFZGl0YWJsZSA9IGZhbHNlO1xyXG4gICAgICBjb25zb2xlLmxvZyhwcm9qZWN0VG9kb3MpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICB0b2RvLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xyXG4gICAgaWYgKFxyXG4gICAgICBlLnRhcmdldCAhPSB0b2RvVGl0bGUgJiZcclxuICAgICAgZS50YXJnZXQgIT0gY2hlY2tCb3ggJiZcclxuICAgICAgdG9kb0Rlc2NyaXB0aW9uLnRleHRDb250ZW50ICE9IFwiXCIgJiZcclxuICAgICAgZS50YXJnZXQgIT0gdG9kb0Rlc2NyaXB0aW9uXHJcbiAgICApIHtcclxuICAgICAgdG9kb0Rlc2NyaXB0aW9uLmNsYXNzTGlzdC50b2dnbGUoXCJ2aXNpYmxlXCIpO1xyXG4gICAgfVxyXG4gIH0pO1xyXG5cclxuICB0b2RvVGl0bGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgIHRvZG9UaXRsZS5jb250ZW50RWRpdGFibGUgPSB0cnVlO1xyXG4gICAgdG9kb0Rlc2NyaXB0aW9uLmNvbnRlbnRFZGl0YWJsZSA9IGZhbHNlO1xyXG4gICAgdG9kb1RpdGxlLmZvY3VzKCk7XHJcbiAgICBzZXRUb0VuZE9mRWRpdGFibGUodG9kb1RpdGxlKTtcclxuICB9KTtcclxuXHJcbiAgdG9kb1RpdGxlLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlwcmVzc1wiLCAoZSkgPT4ge1xyXG4gICAgaWYgKGUua2V5ID09PSBcIkVudGVyXCIpIHtcclxuICAgICAgdG9kb09iamVjdC5zZXRUaXRsZSh0b2RvVGl0bGUudGV4dENvbnRlbnQpO1xyXG4gICAgICB0b2RvVGl0bGUuYmx1cigpO1xyXG4gICAgICB0b2RvVGl0bGUuY29udGVudEVkaXRhYmxlID0gZmFsc2U7XHJcbiAgICAgIGNvbnNvbGUubG9nKHByb2plY3RUb2Rvcyk7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gIHRvZG8uYXBwZW5kKGNoZWNrVGl0bGVEYXRlLCB0b2RvRGVzY3JpcHRpb24pO1xyXG5cclxuICByZXR1cm4gdG9kbztcclxufVxyXG5cclxuLy8gVVRJTFNcclxuXHJcbmZ1bmN0aW9uIHNldFRvRW5kT2ZFZGl0YWJsZShlZGl0YWJsZUVsZW1lbnQpIHtcclxuICBsZXQgcmFuZ2U7XHJcbiAgbGV0IHNlbGVjdGlvbjtcclxuICBpZiAoZG9jdW1lbnQuY3JlYXRlUmFuZ2UpIHtcclxuICAgIHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcclxuICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhlZGl0YWJsZUVsZW1lbnQpO1xyXG4gICAgcmFuZ2UuY29sbGFwc2UoZmFsc2UpO1xyXG4gICAgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpO1xyXG4gICAgc2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xyXG4gICAgc2VsZWN0aW9uLmFkZFJhbmdlKHJhbmdlKTtcclxuICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJ0aGlzIiwiZ2V0VGl0bGUiLCJzZXRUaXRsZSIsIm5ld1RpdGxlIiwiZ2V0RGVzY3JpcHRpb24iLCJzZXREZXNjcmlwdGlvbiIsIm5ld0Rlc2NyaXB0aW9uIiwiZ2V0RHVlRGF0ZSIsIm5ld0RhdGUiLCJEYXRlIiwiZGF5IiwiZ2V0RGF0ZSIsIm1vbnRoIiwiZ2V0TW9udGgiLCJ5ZWFyIiwiZ2V0RnVsbFllYXIiLCJkYXRlQXJyYXkiLCJzcGxpdCIsInNldERhdGUiLCJuYW1lIiwidG9kb3MiLCJnZXROYW1lIiwic2V0TmFtZSIsIm5ld05hbWUiLCJnZXRUb2RvcyIsImdldFRvZG8iLCJjaG9zZW5Ub2RvT2JqZWN0IiwiZmluZCIsInRvZG8iLCJhZGRUb2RvIiwidG9kb09iamVjdCIsInB1c2giLCJkZWxldGVUb2RvIiwidG9kb1RpdGxlVG9CZURlbGV0ZWQiLCJmaWx0ZXIiLCJpc1RvZGF5IiwidG9kYXkiLCJiZWZvcmVUb2RheSIsInRoaXNXZWVrIiwid2Vla0RhdGUiLCJyZWZvcm1hdER1ZURhdGUiLCJkdWVEYXRlQXJyYXkiLCJ0b2RvRGF5IiwidG9kb01vbnRoIiwidG9kb1llYXIiLCJnZXRFbmRPZldlZWtEYXRlIiwibnVtYmVyT2ZEYXlzSW5Nb250aCIsImRheXNJbk1vbnRoIiwiZW5kT2ZXZWVrRGF5IiwiZW5kT2ZNb250aCIsImVuZE9mWWVhciIsImFsbFRvZG9zIiwicHJvamVjdHMiLCJnZXRQcm9qZWN0cyIsImdldFByb2plY3QiLCJwcm9qZWN0TmFtZSIsInByb2oiLCJhZGRQcm9qZWN0IiwibmV3UHJvamVjdE9iamVjdCIsInNvcnRUb2RvcyIsInRvZGF5UHJvamVjdCIsIm1vbnRoUHJvamVjdCIsIndlZWtQcm9qZWN0IiwibW9udGhQcm9qIiwid2Vla1Byb2oiLCJ0b2RheVByb2oiLCJpIiwibGVuZ3RoIiwicmVmb3JtYXR0ZWREdWVEYXRlIiwiZnVsbEVuZE9mV2Vla0RhdGUiLCJzb3J0TW9udGhQcm9qZWN0Iiwic29ydFdlZWtQcm9qZWN0Iiwic29ydFRvZGF5UHJvamVjdCIsInRvZGF5VG9kb3MiLCJ3ZWVrVG9kb3MiLCJtb250aFRvZG9zIiwibWFpbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEJ0biIsInRvZG9Gb3JtIiwiY2xvc2VUb2RvRm9ybUJ0biIsInRvZG9TdWJtaXRCdG4iLCJjbG9zZUZvcm1BbmRSZXNldCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInByb2plY3QiLCJlbGVtZW50cyIsIml0ZW0iLCJ2YWx1ZSIsInNob3dQcm9qZWN0cyIsInRleHRDb250ZW50IiwiY29sb3JBcnJheSIsInByb2plY3RCb3giLCJjcmVhdGVQcm9qZWN0Qm94IiwiYmdDb2xvckluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiYmdDb2xvciIsImNoaWxkTm9kZXMiLCJzdHlsZSIsImJhY2tncm91bmRDb2xvciIsInNwbGljZSIsImFwcGVuZENoaWxkIiwicHJvamVjdE9iamVjdCIsImNyZWF0ZUVsZW1lbnQiLCJhZGQiLCJwcm9qZWN0SGVhZGVyIiwicHJvamVjdFRvZG9zIiwidG9kb0JveCIsInRvZG9FbCIsImNyZWF0ZVRvZG9Cb3giLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImNoZWNrQm94Iiwic2V0QXR0cmlidXRlIiwidG9kb1RpdGxlIiwidG9kb0RhdGUiLCJjaGVja1RpdGxlRGF0ZSIsImFwcGVuZCIsInRvZG9EZXNjcmlwdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJ0YXJnZXQiLCJjaGVja2VkIiwiY29udGVudEVkaXRhYmxlIiwiZm9jdXMiLCJzZXRUb0VuZE9mRWRpdGFibGUiLCJrZXkiLCJibHVyIiwiZWRpdGFibGVFbGVtZW50IiwicmFuZ2UiLCJzZWxlY3Rpb24iLCJjcmVhdGVSYW5nZSIsInNlbGVjdE5vZGVDb250ZW50cyIsImNvbGxhcHNlIiwid2luZG93IiwiZ2V0U2VsZWN0aW9uIiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJwcmV2ZW50RGVmYXVsdCIsIm5ld1RvZG8iXSwic291cmNlUm9vdCI6IiJ9