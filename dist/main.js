(()=>{"use strict";const e=class{constructor(e,t,o=""){this.title=e,this.description=t,this.dueDate=o}getTitle(){return this.title}setTitle(e){return this.title=e}getDescription(){return this.description}setDescription(e){return this.description=e}getDueDate(){if(""==this.dueDate){let e=new Date;return e.getDate()+"-"+(e.getMonth()+1)+"-"+e.getFullYear()}return this.dueDate}setDate(e){return this.dueDate=e}},t=class{constructor(e){this.name=e,this.todos=[]}getName(){return this.name}setName(e){return this.name=e}getTodos(){return this.todos}getTodo(e){return this.todos.find((t=>t.title===e.title))}addTodo(e){this.todos.find((t=>t.title===e.title))||this.todos.push(e)}deleteTodo(e){return this.todos=this.todos.filter((t=>t.title!==e))}};function o(e,t){return new Date(t,e,0).getDate()}function s(e,t,s){let n=new Date,d=n.getDate(),i=n.getMonth()+1,l=n.getFullYear(),a=d+"-"+i+"-"+l;for(let n=0;n<e.getTodos().length;n++){let r=e.getTodos()[n],c=r.getDueDate(),u=c.split("-"),h=Number(u[0]),g=Number(u[1]),m=Number(u[2]),p=d+6,T=i,D=l;p>o(i,l)&&(p=1,T+=1,13===T&&(T=1,D+=1));let v=new Date,f=new Date(D,T-1,p),b=new Date(m,g-1,h);b>=v&&b<=f&&(t.addTodo(r),e.deleteTodo(r.title)),c===a&&(s.addTodo(r),e.deleteTodo(r.title))}}function n(e,t,o){let n=new Date,d=n.getDate()+"-"+(n.getMonth()+1)+"-"+n.getFullYear();for(let n=0;n<t.getTodos().length;n++){let i=t.getTodos()[n];i.getDueDate()===d&&(o.addTodo(i),t.deleteTodo(i.title)),s(e,t,o)}}let d=new e("Todo 5","new test for date sorting","15-1-2025"),i=new e("Month test","testing month sort","26-1-2025");const l=new class{constructor(){this.projects=[],this.projects.push(new t("Today")),this.projects.push(new t("This Week")),this.projects.push(new t("This Month"))}getProjects(){return this.projects}getProject(e){return this.projects.find((t=>t.name===e))}addProject(e){this.projects.find((t=>t.name===e.name))||this.projects.push(e)}sortTodos(){let e=this.getProject("Today"),t=this.getProject("This Month"),o=this.getProject("This Week");s(t,o,e),n(t,o,e),function(e,t,o){let d=new Date,i=d.getDate()+"-"+(d.getMonth()+1)+"-"+d.getFullYear();for(let d=0;d<o.getTodos().length;d++){let l=o.getTodos()[d];l.getDueDate()!=i&&(e.addTodo(l),o.deleteTodo(l.title),s(e,t),n(e,t,o))}}(t,o,e)}},a=l.getProject("Today"),r=l.getProject("This Week"),c=l.getProject("This Month");a.addTodo(d),c.addTodo(i),l.sortTodos();const u=document.querySelector(".main-board"),h=document.querySelector(".button-box"),g=document.querySelector(".todo-form"),m=document.querySelector(".create-todo-btn");function p(){u.textContent="";let e=["#FAEDCB","#C9E4DE","#C6DEF1","#D8CDF0","#F2C6DE","#F7D9C4"];for(let t=0;t<l.getProjects().length;t++){let o=T(l.getProjects()[t]),s=Math.floor(5*Math.random())+0,n=e[s];o.childNodes[0].style.backgroundColor=n,e.splice(s,1),u.appendChild(o)}}function T(e){const t=document.createElement("div");t.classList.add("project-box");const o=document.createElement("p");o.classList.add("project-header"),o.textContent=e.name;const s=e.getTodos();if(t.appendChild(o),0!=s.length){const e=document.createElement("div");e.classList.add("todo-box"),e.classList.add("visible");for(let t=0;t<s.length;t++){let o=D(s[t]);o.style.backgroundColor=t%2==1?"#e4e4e4":"white",e.appendChild(o)}t.appendChild(e),t.addEventListener("click",(t=>{e.classList.toggle("visible")}))}return t}function D(e){const t=document.createElement("div");t.classList.add("todo");const o=document.createElement("input");o.setAttribute("type","checkbox"),o.setAttribute("checked-id","checkbox");const s=document.createElement("p");s.classList.add("todo-title"),s.textContent=e.title;const n=document.createElement("p");n.classList.add("todo-date"),n.textContent=e.getDueDate();const d=document.createElement("div");d.classList.add("check-title-date"),d.append(o,s,n);const i=document.createElement("p");return i.classList.add("todo-description"),i.textContent=e.description,t.addEventListener("click",(e=>{e.target!=s&&i.classList.toggle("visible")})),s.addEventListener("click",(()=>{s.contentEditable=!0})),t.append(d,i),t}h.addEventListener("click",(()=>{g.classList.toggle("invisible");let e=g.elements.item(0),t=g.elements.item(1),o=g.elements.item(2),s=g.elements.item(3);t.value="",o.value="",s.value="",e.value="today"})),m.addEventListener("click",(t=>{t.preventDefault();let o=g.elements.item(0),s=g.elements.item(1),n=g.elements.item(2),d=g.elements.item(3);if(""===d.value){const t=new e(s.value,n.value);"today"===o.value?a.addTodo(t):"this week"===o.value?r.addTodo(t):"this month"===o.value&&c.addTodo(t)}else{let t=function(e){let t=e.split("-"),o=new Date(t[0],t[1],t[2]);return`${o.getDate()}-${o.getMonth()}-${o.getFullYear()}`}(d.value);const i=new e(s.value,n.value,t);"today"===o.value?a.addTodo(i):"this week"===o.value?r.addTodo(i):"this month"===o.value&&c.addTodo(i)}o.value="today",s.value="",n.value="",d.value="",g.classList.add("invisible"),l.sortTodos(),p()})),p()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,